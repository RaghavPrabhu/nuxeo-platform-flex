<!--
/*
 * (C) Copyright 2006-20011 Nuxeo SAS (http://nuxeo.com/) and contributors.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl.html
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * Contributors:
 *     Nuxeo - initial API and implementation
 */
-->
<mx:Panel xmlns="org.nuxeo.ecm.flex.login" xmlns:mx="http://www.adobe.com/2006/mxml"
  xmlns:word="*" layout="absolute" creationComplete="init()">

  <mx:states>
    <mx:State name="LoggedInState">
      <mx:SetProperty target="{loginForm}" name="visible" value="false" />
      <mx:SetProperty target="{loggedInUser}" name="visible" value="true" />
      <mx:SetProperty target="{logoutButton}" name="visible" value="true" />
    </mx:State>
    <mx:State name="NotLoggedInState">
      <mx:SetProperty target="{loginForm}" name="visible" value="true" />
      <mx:SetProperty target="{loggedInUser}" name="visible" value="false" />
      <mx:SetProperty target="{logoutButton}" name="visible" value="false" />
    </mx:State>
  </mx:states>

  <mx:Script>
  <![CDATA[
    import mx.controls.Alert;
    import mx.rpc.events.FaultEvent;
    import mx.rpc.events.ResultEvent;
    import org.nuxeo.ecm.flex.login.NuxeoLogin;
    import flash.net.*;

    [Bindable]
    public var showServerUrl:Boolean = false;

    private var nxLogin:NuxeoLogin;

    [Bindable]
    private var currentUser:Object;

    private function init():void
    {
      nxLogin = new NuxeoLogin();
      checkLogin();
    }

    private function doLogin():void {
      nxLogin.setLoginSucessCallBack(loginSuccessHandler);
      nxLogin.setLoginFailedCallBack(loginErrorHandler);
      if (showServerUrl)
      {
        nxLogin.serverURL = serverUrl.text;
      }
      nxLogin.login(login.text,password.text);
    }

    private function doLogout():void {
      nxLogin.logout(checkLogin);
      currentState="NotLoggedInState";
    }

    private function checkLogin():void
    {
      nxLogin.isLoggedIn(loginCheckHandler);
    }

    private function loginCheckHandler(loggedIn:Boolean):void
    {
      if (loggedIn)
      {
        currentState="LoggedInState";
        var parentPanel:Panel = (Panel)(loggedInUser.parent);
        parentPanel.title="Logged In Nuxeo";
      }
      else
      {
        currentState="NotLoggedInState";
      }
    }

    private function loginSuccessHandler(event:ResultEvent):void {
      currentUser = nxLogin.getConnectedUser();
      var mev:Event = new Event("loggedin",true,false);
      dispatchEvent(mev);
    }

    private function loginErrorHandler(event:FaultEvent):void {
       Alert.show(event.fault.faultString, event.fault.faultCode.toString());
    }

  ]]>
  </mx:Script>

  <mx:Form x="0" y="0" width="100%" backgroundColor="#ffffff" borderStyle="solid" height="100%" id="loginForm">
    <mx:FormHeading label="You need to authenticate :" />
    <mx:FormItem label="Server Address:" visible="{showServerUrl}" width="100%">
      <mx:TextInput id="serverUrl" width="200" />
    </mx:FormItem>
    <mx:FormItem label="Login :" width="100%">
      <mx:TextInput id="login" width="200" />
    </mx:FormItem>
    <mx:FormItem label="Password:" width="100%">
      <mx:TextInput id="password" width="200" displayAsPassword="true" />
    </mx:FormItem>
    <mx:Button label="Login" click="doLogin()" />
  </mx:Form>

  <mx:Form x="0" y="0" width="100%" backgroundColor="#ffffff" borderStyle="solid" height="100%" id="loggedInUser" visible="false">
    <mx:VBox>
     <mx:Label text="{currentUser.name} ( {currentUser.FirstName} {currentUser.LastName} )" />
     <mx:Button id="logoutButton" label="Log out" click="doLogout()" visible="false" />
    </mx:VBox>
  </mx:Form>

</mx:Panel>
